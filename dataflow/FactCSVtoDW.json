{
	"name": "FactCSVtoDW",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FactInternetSalesCSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactInternetSalesDW",
						"type": "DatasetReference"
					},
					"name": "DW"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Filter1"
				}
			],
			"script": "source(output(\n\t\tProductKey as integer,\n\t\tOrderDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tShipDateKey as integer,\n\t\tCustomerKey as integer,\n\t\tSalesOrderNumber as string,\n\t\tSalesOrderLineNumber as short,\n\t\tRevisionNumber as short,\n\t\tOrderQty as short,\n\t\tUnitPrice as decimal(10,0),\n\t\tExtendedAmount as decimal(10,0),\n\t\tUnitPriceDiscountPct as float,\n\t\tDiscountAmount as float,\n\t\tProductStandardCost as decimal(10,0),\n\t\tTotalProductCost as decimal(10,0),\n\t\tSalesAmount as decimal(10,0),\n\t\tTaxAmt as decimal(10,0),\n\t\tFreight as decimal(10,0),\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['staging','processedFiles'],\n\twildcardPaths:['staging/FactInternetSales*.csv']) ~> source1\nsource1 derive(Flag = iif(isNull(ProductKey), 0, iif(isNull(OrderDateKey), 0, iif(isNull(DueDateKey), 0, iif(isNull(ShipDateKey), 0, iif(isNull(CustomerKey), 0, iif(isNull(SalesOrderNumber), 0, iif(isNull(SalesOrderLineNumber), 0, iif(isNull(RevisionNumber), 0, iif(isNull(OrderQty), 0, iif(isNull(UnitPrice), 0, iif(isNull(ExtendedAmount), 0, iif(isNull(UnitPriceDiscountPct), 0, iif(isNull(DiscountAmount), 0, iif(isNull(ProductStandardCost), 0, iif(isNull(TotalProductCost), 0, iif(isNull(SalesAmount), 0, iif(isNull(TaxAmt), 0, iif(isNull(Freight), 0, 1))))))))))))))))))) ~> DerivedColumn1\nDerivedColumn1 filter(Flag==1) ~> Filter1\nFilter1 sink(input(\n\t\tProductKey as integer,\n\t\tOrderDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tShipDateKey as integer,\n\t\tCustomerKey as integer,\n\t\tSalesOrderNumber as string,\n\t\tSalesOrderLineNumber as byte,\n\t\tRevisionNumber as byte,\n\t\tOrderQuantity as short,\n\t\tUnitPrice as decimal(19,4),\n\t\tExtendedAmount as decimal(19,4),\n\t\tUnitPriceDiscountPct as double,\n\t\tDiscountAmount as double,\n\t\tProductStandardCost as decimal(19,4),\n\t\tTotalProductCost as decimal(19,4),\n\t\tSalesAmount as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductKey,\n\t\tOrderDateKey,\n\t\tDueDateKey,\n\t\tShipDateKey,\n\t\tCustomerKey,\n\t\tSalesOrderNumber,\n\t\tSalesOrderLineNumber,\n\t\tOrderQuantity = OrderQty,\n\t\tUnitPrice,\n\t\tExtendedAmount,\n\t\tUnitPriceDiscountPct,\n\t\tDiscountAmount,\n\t\tProductStandardCost,\n\t\tTotalProductCost,\n\t\tSalesAmount,\n\t\tTaxAmt,\n\t\tFreight,\n\t\tCarrierTrackingNumber,\n\t\tCustomerPONumber,\n\t\tOrderDate,\n\t\tDueDate,\n\t\tShipDate,\n\t\tRevisionNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DW"
		}
	}
}